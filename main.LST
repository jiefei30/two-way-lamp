C51 COMPILER V9.00   MAIN                                                                  06/19/2019 16:43:37 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Study\keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

*** WARNING C500 IN LINE 1 OF MAIN.C: LICENSE ERROR (R208: RENEW LICENSE ID CODE (LIC))

   1          #include<reg51.h>
   2          #define uchar unsigned char
   3          int LED_speed = 500;                    // 灯的速度（1秒）
   4          int LED_speed_max = 100;                // 灯的速度的最大值（0.2秒）
   5          int LED_speed_min = 1000;               // 灯的速度的最小值（2秒）
   6          int LED_speed_change = 100;             // 灯的速度的该变量 （0.2秒）
   7          int LED_cycle = 5000;                   // 灯的周期（5秒）
   8          int LED_cycle_max = 10000;              // 灯的周期最大值（20秒）
   9          int LED_cycle_min = 1000;               // 灯的周期最小值（2秒）
  10          int LED_cycle_change = 1000;    // 灯的周期的该变量（2秒）
  11          int LED_direction = 0;                  // 灯的移动方向
  12          int     LED_number = 0;                         // 灯亮的个数（0是一个灯）
  13          int LED_which_lighting = 7;             // 灯亮的位置
  14          int time=0;                                             // 中断计时单位
  15          int key1_down=0,key2_down=0,key3_down=0,key4_down=0,key5_down=0;    // 按键是否按下
  16          int all_lighting_condition[3][8]={
  17                                                                                  {0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80},
  18                                                                                  {0x03,0x06,0x0C,0x18,0x30,0x60,0xC0,0x81},
  19                                                                                  {0x07,0x0E,0x1C,0x38,0x70,0xE0,0xC1,0x83}
  20                                                                           };                                 //所有的亮灯情况
  21          void delay(unsigned int x)      //延时函数，只用在按键处
  22          {
  23   1              while(x--);
  24   1      }
  25          void LED_move(void);
  26          #include<key_scan.c>
  27          void timer0_init(void)      //初始化
  28          {
  29   1              TMOD = 0x01;                    //定时器T0工作在方式1,（计数器为16位）
  30   1              TH0 = 0xf8;             //初值(65536 - 2000)/ 256;               2e16    TH0预置，60536十六进制低8位
  31   1              TL0 = 0x30;             //初值(65536 - 2000)% 256;                         TL0预置，60536十六进制高8位
  32   1              EA = 1;                                 //启用定时器中断，直接对IE位赋值        （中断总开关）  
  33   1              ET0 = 1;                            //允许T0中断        （设置中断允许寄存器IE中ET0的位，开启中断小开关）
  34   1              TR0 = 1;                            //软启动（开始计数）
  35   1      }
  36          void timer0_isr(void) interrupt 1       //interrupt 1 定时器中断
  37          {
  38   1      
  39   1              TH0 = 0xf8;           //(65536 - 2000)/ 256;   每2ms发生一次中断 TH0重新预置
  40   1              TL0 = 0x30;           //(65536 - 2000)% 256;                                            TL0重新预置
  41   1              time++;                           //每中断一次计一次
  42   1              if(time%LED_speed==0) LED_move();                               //灯移动一次
  43   1              if(time%LED_cycle==0) LED_direction = ~ LED_direction;  //移动方向改变
  44   1      }
  45          void main(void)
  46          {
  47   1              timer0_init();        //中断初始化
  48   1              P0 = all_lighting_condition[LED_number][LED_which_lighting]; //初始在最左边亮一盏灯
  49   1              while(1) key_scan();              //一直执行键盘扫描
  50   1      }
  51          void LED_move(void)
  52          {
  53   1         if(LED_direction)      //如果向左
  54   1              {
C51 COMPILER V9.00   MAIN                                                                  06/19/2019 16:43:37 PAGE 2   

  55   2                      LED_which_lighting++;    
  56   2                      if(LED_which_lighting == 8)      LED_which_lighting=0;
  57   2              } else
  58   1              {
  59   2                      LED_which_lighting--;
  60   2                  if(LED_which_lighting == -1) LED_which_lighting=7;
  61   2              }
  62   1              P0 = all_lighting_condition[LED_number][LED_which_lighting];
  63   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    651    ----
   CONSTANT SIZE    =     40    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     82    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
